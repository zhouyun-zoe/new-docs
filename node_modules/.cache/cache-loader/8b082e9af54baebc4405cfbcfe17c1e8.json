{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/service-list/asset-service.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/service-list/asset-service.md","mtime":1596447875487},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-service-list-asset-service-md-c42.json","mtime":1596448085564},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/docs/service-list/asset-service.md"],"names":["React","mdx","frontMatter","title","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Asset Service'\n};\nexport const metadata = {\n  \"id\": \"service-list/asset-service\",\n  \"title\": \"Asset Service\",\n  \"description\": \"# Asset Service\",\n  \"source\": \"@site/docs/service-list/asset-service.md\",\n  \"permalink\": \"/new-docs/docs/service-list/asset-service\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/service-list/asset-service.md\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Metadata Service\",\n    \"permalink\": \"/new-docs/docs/service-list/metadata-service\"\n  },\n  \"next\": {\n    \"title\": \"Authorization Service\",\n    \"permalink\": \"/new-docs/docs/service-list/auth-service\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '概述',\n  id: '概述',\n  children: []\n}, {\n  value: '接口',\n  id: '接口',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"asset-service\"\n    }}>{`Asset Service`}</h1>\n    <h2 {...{\n      \"id\": \"概述\"\n    }}>{`概述`}</h2>\n    <p>{`Asset service 是 Huobi Chain 的内置资产模块，负责管理链原生资产以及第三方发行资产。`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`资产成为一等公民：加密资产作为区块链的核心，理应成为一等公民。Asset 模块利用 Muta 框架提供的 service 能力，为所有资产提供链级别的支持，为面向资产编程提供支持。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`第三方发行资产： 用户可以使用 Asset 模块发行资产，自定义资产属性和总量等`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`资产与合约交互： 未来可以打通虚拟机和资产模块，为资产的广泛使用提供支持`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"接口\"\n    }}>{`接口`}</h2>\n    <p>{`Asset 模块采用类似以太坊 ERC-20 的接口设计，主要包含：`}</p>\n    <p>{`1.发行资产`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 资产数据结构\npub struct Asset {\n    pub id:     Hash,\n    pub name:   String,\n    pub symbol: String,\n    pub admin: Address, // 资产的管理员，拥有 mint 资产的权利\n    pub supply: u64, // 发行量：supply 为 100，precision 为 1 时，表示发行 10 个 token\n    pub precision: u64, // 资产数值精度，1 表示 10 的一次方，以此类推\n    pub relayable: bool, // 标记资产是否是 relayable 的\n}\n\n// 发行资产接口\n// 资产 ID 自动生成，确保唯一\nfn create_asset(&mut self, ctx: ServiceContext, payload: CreateAssetPayload) -> ProtocolResult<Asset>;\n\n// 发行资产参数\npub struct CreateAssetPayload {\n    pub name:       String,\n    pub symbol:     String,\n    pub admin:      Address,\n    pub supply:     u64,\n    pub init_mints: Vec<IssuerWithBalance>, // 创建资产时，需要同时 mint 操作的请求\n    pub precision:  u64,\n    pub relayable:  bool,\n}\n`}</code></pre>\n    <p>{`2.查询资产信息`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 查询接口\nfn get_asset(&self, ctx: ServiceContext, payload: GetAssetPayload) -> ProtocolResult<Asset>；\n\n// 查询参数\npub struct GetAssetPayload {\n    pub id: Hash, // 资产 ID\n}\n`}</code></pre>\n    <p>{`3.转账`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 转账接口\nfn transfer(&mut self, ctx: ServiceContext, payload: TransferPayload) -> ProtocolResult<()>；\n\n// 转账参数\npub struct TransferPayload {\n    pub asset_id: Hash,\n    pub to:       Address,\n    pub value:    u64,\n    pub memo:     String,\n}\n\n// 转账事件，name = \"TransferAsset\"\npub struct TransferEvent {\n    pub asset_id: Hash,\n    pub from:     Address,\n    pub to:       Address,\n    pub value:    u64,\n    pub memo:     String,\n}\n`}</code></pre>\n    <p>{`4.查询余额`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 查询接口\nfn get_balance(&self, ctx: ServiceContext, payload: GetBalancePayload) -> ProtocolResult<GetBalanceResponse> \n\n// 查询参数\npub struct GetBalancePayload {\n    pub asset_id: Hash,\n    pub user:     Address,\n}\n\n// 返回值\npub struct GetBalanceResponse {\n    pub asset_id: Hash,\n    pub user:     Address,\n    pub balance:  u64,\n}\n`}</code></pre>\n    <p>{`5.批准额度`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 批准接口\nfn approve(&mut self, ctx: ServiceContext, payload: ApprovePayload) -> ProtocolResult<()>;\n\n// 批准参数\npub struct ApprovePayload {\n    pub asset_id: Hash,\n    pub to:       Address,\n    pub value:    u64,\n    pub memo:     String,\n}\n\n// 批准事件，name = \"ApproveAsset\"\npub struct ApproveEvent {\n    pub asset_id: Hash,\n    pub grantor:  Address,\n    pub grantee:  Address,\n    pub value:    u64,\n    pub memo:     String,\n}\n`}</code></pre>\n    <p>{`6.授权转账`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 接口\nfn transfer_from(&mut self, ctx: ServiceContext, payload: TransferFromPayload) -> ProtocolResult<()>；\n\n// 参数\npub struct TransferFromPayload {\n    pub asset_id:  Hash,\n    pub sender:    Address,\n    pub recipient: Address,\n    pub value:     u64,\n    pub memo:      String,\n}\n\n// 授权转账事件，name = \"TransferFrom\"\npub struct TransferFromEvent {\n    pub asset_id:  Hash,\n    pub caller:    Address,\n    pub sender:    Address,\n    pub recipient: Address,\n    pub value:     u64,\n    pub memo:      String,\n}\n`}</code></pre>\n    <p>{`7.查询限额`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 查询接口\nfn get_allowance(&self, ctx: ServiceContext, payload: GetAllowancePayload) -> ProtocolResult<GetAllowanceResponse>；\n\n// 查询参数\npub struct GetAllowancePayload {\n    pub asset_id: Hash,\n    pub grantor:  Address,\n    pub grantee:  Address,\n}\n\n// 返回值\npub struct GetAllowanceResponse {\n    pub asset_id: Hash,\n    pub grantor:  Address,\n    pub grantee:  Address,\n    pub value:    u64,\n}\n`}</code></pre>\n    <p>{`8.查询链的原生资产`}</p>\n    <p>{`链的原生资产为创世启动时发行的资产，资产信息写在 `}<inlineCode parentName=\"p\">{`Asset Service`}</inlineCode>{` 创世配置文件中。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 查询接口：返回原生资产\nfn get_native_asset(&self, ctx: ServiceContext) -> ProtocolResult<Asset>;\n`}</code></pre>\n    <p>{`9.mint 资产`}</p>\n    <p>{`只有对应 Asset 的 admin 才有权限 mint 资产。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// mint 接口\nfn mint(&mut self, ctx: ServiceContext, payload: MintAssetPayload) -> ServiceResponse<()>;\n\n// mint 参数\npub struct MintAssetPayload {\n    pub asset_id: Hash,\n    pub to:       Address,\n    pub amount:   u64,\n    pub proof:    Hex,\n    pub memo:     String,\n}\n\n// mint 事件，name = \"MintAsset\"\npub struct MintAssetEvent {\n    pub asset_id: Hash,\n    pub to:       Address,\n    pub amount:   u64,\n    pub proof:    Hex,\n    pub memo:     String,\n}\n`}</code></pre>\n    <p>{`10.burn 资产`}</p>\n    <p>{`只有资产的拥有者自身可以 burn 掉自己的资产`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// burn 接口\nfn burn(&mut self, ctx: ServiceContext, payload: BurnAssetPayload) -> ServiceResponse<()>;\n\n// burn 参数\npub struct BurnAssetPayload {\n    pub asset_id: Hash,\n    pub amount:   u64,\n    pub proof:    Hex,\n    pub memo:     String,\n}\n\n// burn 事件，name = \"BurnAsset\"\npub struct BurnAssetEvent {\n    pub asset_id: Hash,\n    pub from:     Address,\n    pub amount:   u64,\n    pub proof:    Hex,\n    pub memo:     String,\n}\n`}</code></pre>\n    <p>{`11.relay 资产`}</p>\n    <p>{`relay 资产和 burn 资产类似，只有资产拥有者才有权利操作，但是 relay 操作只能在 标记为 relayable 的 Asset 上才可以进行。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// relay 接口\nfn relay(&mut self, ctx: ServiceContext, payload: RelayAssetPayload) -> ServiceResponse<()>;\n\n// relay 参数\npub struct RelayAssetPayload {\n    pub asset_id: Hash,\n    pub amount:   u64,\n    pub proof:    Hex,\n    pub memo:     String,\n}\n\n// relay 事件，name = \"RelayAsset\"\npub struct RelayAssetEvent {\n    pub asset_id: Hash,\n    pub from:     Address,\n    pub amount:   u64,\n    pub proof:    Hex,\n    pub memo:     String,\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
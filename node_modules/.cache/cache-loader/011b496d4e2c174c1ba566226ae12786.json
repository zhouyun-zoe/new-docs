{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/docs_zh/dev/service-dev.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/docs_zh/dev/service-dev.md","mtime":1596510151890},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-docs-zh-dev-service-dev-md-661.json","mtime":1596516671757},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
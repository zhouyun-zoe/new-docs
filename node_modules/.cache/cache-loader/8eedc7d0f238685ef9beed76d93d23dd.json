{"remainingRequest":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/vdocs/website/new-docs/docs/docs_zh/advanced/core/overlord.md","dependencies":[{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/docs/docs_zh/advanced/core/overlord.md","mtime":1596510126055},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-docs-zh-advanced-core-overlord-md-973.json","mtime":1596510183711},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/cache-loader/dist/cjs.js","mtime":1588759099254},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/babel-loader/lib/index.js","mtime":1588759098876},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1588759134386},{"path":"/Users/Yun/Desktop/vdocs/website/new-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1588759133114}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/vdocs/website/new-docs/docs/docs_zh/advanced/core/overlord.md"],"names":["React","mdx","frontMatter","id","title","metadata","Alert","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'overlord',\n\ttitle: 'Overlord'\n};\nexport const metadata = {\n  \"id\": \"docs_zh/advanced/core/overlord\",\n  \"title\": \"Overlord\",\n  \"description\": \"## 目标\",\n  \"source\": \"@site/docs/docs_zh/advanced/core/overlord.md\",\n  \"permalink\": \"/new-docs/docs/docs_zh/advanced/core/overlord\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta/edit/master/website/docs/docs_zh/advanced/core/overlord.md\",\n  \"sidebar\": \"docs_zh\",\n  \"previous\": {\n    \"title\": \"Architecture\",\n    \"permalink\": \"/new-docs/docs/docs_zh/advanced/arch\"\n  },\n  \"next\": {\n    \"title\": \"P2P Network\",\n    \"permalink\": \"/new-docs/docs/docs_zh/advanced/core/network\"\n  }\n};\n  /* @jsx mdx */\nimport Alert from '@site/src/components/Alert';\nexport const rightToc = [{\n  value: '目标',\n  id: '目标',\n  children: []\n}, {\n  value: '设计背景',\n  id: '设计背景',\n  children: []\n}, {\n  value: 'Overlord 协议',\n  id: 'overlord-协议',\n  children: [{\n    value: '总体设计',\n    id: '总体设计',\n    children: []\n  }, {\n    value: '协议描述',\n    id: '协议描述',\n    children: []\n  }]\n}, {\n  value: 'Overlord 架构',\n  id: 'overlord-架构',\n  children: [{\n    value: '共识状态机(SMR)',\n    id: '共识状态机smr',\n    children: []\n  }, {\n    value: '状态存储(State)',\n    id: '状态存储state',\n    children: []\n  }, {\n    value: '定时器',\n    id: '定时器',\n    children: []\n  }, {\n    value: 'Wal',\n    id: 'wal',\n    children: []\n  }]\n}, {\n  value: 'Overlord 接口',\n  id: 'overlord-接口',\n  children: [{\n    value: '共识接口',\n    id: '共识接口',\n    children: []\n  }, {\n    value: '密码学接口',\n    id: '密码学接口',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"目标\"\n    }}>{`目标`}</h2>\n    <p>{`Overlord 的目标是成为能够支持上百个共识节点，满足数千笔每秒的交易处理能力，且交易延迟不超过数秒的 BFT 共识算法。简单来讲，就是能够满足大部分现实业务需求的高性能共识算法。`}</p>\n    <h2 {...{\n      \"id\": \"设计背景\"\n    }}>{`设计背景`}</h2>\n    <p>{`在区块链中，一次共识至少包含两层语义：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`完成交易定序`}</li>\n      <li parentName=\"ol\">{`对最新状态达成共识`}</li>\n    </ol>\n    <p>{`对于 UTXO 模型的区块链来说，新状态隐含在交易输出中，因此 1 和 2 是一体不可分割的。而对于 Account 模型的区块链来说，交易中并没有包含状态，只有执行完交易才能生成最新状态，状态用单独的一颗 MPT 树保存。`}</p>\n    <p>{`在 Account 模型中，为了实现第二层语义，常用的办法是，共识节点在打包新区块之前执行完区块中的所有交易，以计算出最新状态保存到块头中。包含了最新状态的区块达成共识后，区块中的交易完成了定序，同时最新状态亦完成了共识，任何节点可以重放区块中的交易验证状态的正确性。然而，这种处理方法制约了 BFT 类共识算法的交易处理能力。如下图所示，当高度为 h 的区块 B(h) 达成共识后，高度为 h+1 的新 leader 打包并执行 B(h+1) 后才能广播 B(h+1)，其他共识节点收到 B(h+1) 后必须再执行 B(h+1) 以验证其正确性。在共识过程中，这两次串行的区块执行过程拖慢了共识效率。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/static/docs-img/block_process.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`一种改进的办法是，Leader 在打包新区块时并不立即执行该块，待区块达成共识后，共识节点才执行该块生成新的状态，下一个高度的 Leader 将新状态与下一个区块一起参与共识。这种办法省掉了一次区块执行过程。`}</p>\n    <p>{`当从更微观的角度来审察这种改进方案时，我们发现其仍然存在很大的改进空间。这是因为，任何一个共识节点的共识模块和执行模块在整个共识过程中始终是串行的，如上图所示，当共识模块在对区块共识时，执行模块始终是空闲的，反之亦然。如果能够将执行模块和共识模块并行，那么共识的交易处理能力理论上能够达到执行模块的最大处理极限。`}</p>\n    <h2 {...{\n      \"id\": \"overlord-协议\"\n    }}>{`Overlord 协议`}</h2>\n    <h3 {...{\n      \"id\": \"总体设计\"\n    }}>{`总体设计`}</h3>\n    <p>{`Overlord 的核心思想是解耦交易定序与状态共识。`}</p>\n    <p>{`我们用 B(h, S, T) 表示高度为 h 的区块，其包含的状态是 S，定序的交易集合是 T。在共识的第二层语义中，人们对 S 的解读往往是执行完 T 后的状态，正是这种思维定势使得执行模块和共识模块无法并行。如果将 S 理解为是共识模块在开始对 B(h, S, T) 共识时，执行模块执行达到的最新状态，那么共识模块将无需等待执行模块执行新的区块，而执行模块只需要沿着已定序的交易向前执行。这样，共识模块可以连续向前推进，不断将新交易定序，同时完成执行模块的最新状态共识; 执行模块也可以连续执行已定序的交易集合，直到将所有已定序的交易执行完毕。`}</p>\n    <h3 {...{\n      \"id\": \"协议描述\"\n    }}>{`协议描述`}</h3>\n    <p>{`在 Overlord 中，我们将达成共识的区块称为 `}<em parentName=\"p\">{`block`}</em>{`。`}<em parentName=\"p\">{`block`}</em>{` 包含 Header 和 Body 两部分（如下图所示）。`}<em parentName=\"p\">{`block`}</em>{` 的核心结构如下图所示，`}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` 是单调递增的数值，相当于高度；`}<inlineCode parentName=\"p\">{`prev_hash`}</inlineCode>{` 是上一个 `}<em parentName=\"p\">{`block`}</em>{` 的哈希；`}<inlineCode parentName=\"p\">{`order_root`}</inlineCode>{` 是包含在 Body 中的所有待定序的交易的 merkle root；`}<inlineCode parentName=\"p\">{`state_root`}</inlineCode>{` 表示最新的世界状态的 MPT Root；`}<inlineCode parentName=\"p\">{`confirm_roots`}</inlineCode>{` 表示从上一个 `}<em parentName=\"p\">{`block`}</em>{` 的 `}<inlineCode parentName=\"p\">{`state_root`}</inlineCode>{` 到当前 `}<em parentName=\"p\">{`block`}</em>{` 的 `}<inlineCode parentName=\"p\">{`state_root`}</inlineCode>{` 之间执行模块向前推进的 `}<inlineCode parentName=\"p\">{`order_root`}</inlineCode>{` 集合；`}<inlineCode parentName=\"p\">{`receipt_roots`}</inlineCode>{` 记录被执行的每一个 `}<inlineCode parentName=\"p\">{`order_root`}</inlineCode>{` 所对应的 `}<inlineCode parentName=\"p\">{`receipt_root`}</inlineCode>{`；`}<inlineCode parentName=\"p\">{`proof`}</inlineCode>{` 是对上一个 `}<em parentName=\"p\">{`block`}</em>{` 的证明。`}</p>\n    <Alert type=\"info\" mdxType=\"Alert\">\n      <p>{`Overlord 是确定性共识，但是需要特别注意的是，区块头中所包含的 proof 是用来验证上一个块，而非当前区块。因此，对于最新区块而言，能证明其合法性的 proof 将被尚未出现的下一个区块包含，那么如何验证最新区块的合法性呢？实际上，诚实节点在将最新区块持久化之前，已经获得了对该区块的 proof 并进行了合法性验证，因此从诚实节点获取的最新区块是经过验证并且可以相信不会回滚的。`}</p>\n    </Alert>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/static/docs-img/block.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`在具体的方案中，共识模块批量打包交易进行共识, 达成共识后, 将已定序的交易集合添加到待执行的队列中, 执行模块以交易集合为单位依次执行, 每执行完一个交易集合, 就将被执行的交易集合的 order_root, 以及执行后的 stateRoot 发给共识模块。在 Leader 打包交易拼装 `}<em parentName=\"p\">{`block`}</em>{` 时, 取最新收到的 state_root 作为最新状态参与共识.`}</p>\n    <p>{`Overlord 是在具体共识算法之上的解释层, 通过重新诠释共识的语义, 使得交易定序与状态共识解耦, 从而在实际运行中获得更高的交易处理能力。理论上, Overlord 能够基于几乎任何 BFT 类共识算法, 具体在我们的项目中则是基于改进的 Tendermint。`}</p>\n    <p>{`我们对 Tendermint 主要做了三点改进：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`将聚合签名应用到 Tendermint 中, 使共识的消息复杂度从 `}<img src=\"https://latex.codecogs.com/svg.latex?\\inline&space;O(n^{2})\" title=\"O(n^{2})\" />{` 降到 `}<img src=\"https://latex.codecogs.com/svg.latex?\\inline&space;O(n)\" title=\"O(n)\" />{`, 从而能够支持更多的共识节点`}</li>\n      <li parentName=\"ol\">{`在 `}<em parentName=\"li\">{`proposal`}</em>{` 中增加了 propose 交易区, 使新交易的同步与共识过程可并行`}</li>\n      <li parentName=\"ol\">{`共识节点收到 `}<em parentName=\"li\">{`proposal`}</em>{` 后, 无需等 `}<em parentName=\"li\">{`block`}</em>{` 校验通过即可投 `}<em parentName=\"li\">{`prevote`}</em>{` 票, 而在投 `}<em parentName=\"li\">{`precommit`}</em>{` 票之前必须得到 `}<em parentName=\"li\">{`block`}</em>{` 校验结果, 从而使得区块校验与 `}<em parentName=\"li\">{`prevote`}</em>{` 投票过程并行`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"聚合签名\"\n    }}>{`聚合签名`}</h4>\n    <p>{`在 Tendermint 共识协议中，节点在收到 `}<em parentName=\"p\">{`proposal`}</em>{` 之后对其投出 `}<em parentName=\"p\">{`prevote`}</em>{`，`}<em parentName=\"p\">{`prevote`}</em>{` 投票是全网广播给其他节点的。这时的通信复杂度是 `}<img src=\"https://latex.codecogs.com/svg.latex?\\inline&space;O(n^{2})\" title=\"O(n^{2})\" />{`。使用聚合签名优化是所有的节点将 `}<em parentName=\"p\">{`prevote`}</em>{` 投票发给一个指定的 `}<em parentName=\"p\">{`Relayer`}</em>{` 节点，Relayer 节点可以是任何一个共识节点。Relayer 节点将收到的签名通过算法计算聚合签名，再用一个位图 (bit-vec) 表示是哪些节点的投票。将聚合签名和位图发送给其他节点，对于 `}<em parentName=\"p\">{`precommit`}</em>{` 投票同理。这样就将通信复杂度降到了 `}<img src=\"https://latex.codecogs.com/svg.latex?\\inline&space;O(n)\" title=\"O(n)\" />{`。`}</p>\n    <p>{`如果 `}<em parentName=\"p\">{`Relayer`}</em>{` 出现故障，没有发送聚合签名给共识节点，或者 `}<em parentName=\"p\">{`Relayer`}</em>{` 作恶，只给小部分共识节点发送聚合签名，那么共识将会失活。我们采用超时投空票的方式解决这个问题。当节点在投出 `}<em parentName=\"p\">{`prevote`}</em>{` 投票之后，立即设置一个定时器，如果的超时时间内没有收到 `}<em parentName=\"p\">{`prevoteQC`}</em>{` 直接进入预提交状态，投出 `}<em parentName=\"p\">{`nil precommit`}</em>{` 投票。之后进入到下一个 round。如果预投票阶段正常，投出 `}<em parentName=\"p\">{`precommit`}</em>{` 之后同样设置一个定时器，如果超时没有收到 `}<em parentName=\"p\">{`precommitQC`}</em>{` 则直接进入下一个 round。`}</p>\n    <h4 {...{\n      \"id\": \"同步并行\"\n    }}>{`同步并行`}</h4>\n    <p>{`Overlord 采用压缩区块（compact block）的方式广播 `}<em parentName=\"p\">{`CompactBlock`}</em>{`，即其 Body 中仅包含交易哈希，而非完整交易。共识节点收到 `}<em parentName=\"p\">{`CompactBlock`}</em>{` 后，需要同步获得其 Body 中包含的全部完整交易后才能构造出完整的 `}<em parentName=\"p\">{`block`}</em>{`。`}</p>\n    <p>{`我们在 proposal 里除了包含 `}<em parentName=\"p\">{`CompactBlock`}</em>{` 外，还额外增加了一个 `}<em parentName=\"p\">{`propose`}</em>{` `}<em parentName=\"p\">{`交易区，propose`}</em>{` 交易区中包含待同步的新交易的哈希。需要注意的是，这些交易与 `}<em parentName=\"p\">{`CompactBlock`}</em>{` 里包含的待定序的交易哈希并不重叠，当 `}<em parentName=\"p\">{`CompactBlock`}</em>{` 不足以包含交易池中所有的新交易时，剩余的新交易可以包含到 `}<em parentName=\"p\">{`propose`}</em>{` 交易区中提前同步。这在系统交易量很大的时候，可以提高交易同步与共识的并发程度，进一步提高交易处理能力.`}</p>\n    <h4 {...{\n      \"id\": \"校验并行\"\n    }}>{`校验并行`}</h4>\n    <p>{`共识节点收到 `}<em parentName=\"p\">{`proposal`}</em>{` 后，将 `}<em parentName=\"p\">{`CompactBlock`}</em>{` 的校验(获得完整交易，校验交易的正确性) 与 `}<em parentName=\"p\">{`prevote`}</em>{` 投票并行，只有当收到 `}<em parentName=\"p\">{`prevote`}</em>{` 聚合签名和 `}<em parentName=\"p\">{`CompactBlock`}</em>{` 的检验结果后，才会投 `}<em parentName=\"p\">{`precommit`}</em>{` 票。`}</p>\n    <h2 {...{\n      \"id\": \"overlord-架构\"\n    }}>{`Overlord 架构`}</h2>\n    <p>{`Overlord 共识由以下几个组件组成的：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`状态机(SMR)：根据输入消息的进行状态转换`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`状态存储(State)：用于存储提议，投票等状态`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`定时器(Timer)：设定超时时间触发状态机操作`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Wal：用于读写 Wal 日志`}</p>\n      </li>\n    </ul>\n    <p>{`在 Overlord 共识架构中，当收到消息时，状态存储模块先对消息做基本检查。通过后，根据接收到的消息更新状态，并将消息传输给状态机。此外，为了保持活性还需要一个定时器，当超时时定时器调用接口触发状态机。状态机在做状态变更之后会抛出一个当前状态的事件，状态存储模块和定时器模块监听状态机抛出的事件，根据监听到的事件做相应的处理，例如写 Wal，发送投票，设置定时器等。在重启时状态存储模块先从 Wal 中读取数据，再发送给状态机。整体的架构如下图所示：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/static/docs-img/arch_overlord.png\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"共识状态机smr\"\n    }}>{`共识状态机(SMR)`}</h3>\n    <p>{`状态机模块是整个共识的逻辑核心，它主要的功能是状态变更和 `}<strong parentName=\"p\">{`lock`}</strong>{` 的控制。当收到消息触发时，根据收到的消息做状态变更，并将变更后的状态作为事件抛出。在我们的实现中，Overlord 使用一个应用 BLS 聚合签名优化的 Tendermint 状态机进行共识，整体的工作过程如下。`}</p>\n    <h4 {...{\n      \"id\": \"提议阶段\"\n    }}>{`提议阶段`}</h4>\n    <p>{`节点使用确定性随机算法确定本轮的 `}<em parentName=\"p\">{`Leader`}</em>{`。`}</p>\n    <p><strong parentName=\"p\">{`Leader`}</strong>{`: 广播一个 `}<em parentName=\"p\">{`proposal`}</em></p>\n    <p><strong parentName=\"p\">{`Others`}</strong>{`: 设置一个定时器 T1，当收到 `}<em parentName=\"p\">{`proposal`}</em>{` 之后向 `}<em parentName=\"p\">{`Relayer`}</em>{` 发送 `}<em parentName=\"p\">{`prevote`}</em>{` 投票`}</p>\n    <h4 {...{\n      \"id\": \"预投票阶段\"\n    }}>{`预投票阶段`}</h4>\n    <p><strong parentName=\"p\">{`Relayer`}</strong>{`: 设置一个定时器 T2，对收到的 `}<em parentName=\"p\">{`prevote`}</em>{` 投票进行聚合并生成位图，将聚合后的投票和位图广播给其他节点`}</p>\n    <p><strong parentName=\"p\">{`Others`}</strong>{`: 设置一个定时器 T2，检查聚合的 `}<em parentName=\"p\">{`prevote`}</em>{` 投票的合法性，生成 `}<strong parentName=\"p\">{`PoLC`}</strong>{` 发送 `}<em parentName=\"p\">{`precommit`}</em>{` 投票`}</p>\n    <h4 {...{\n      \"id\": \"校验等待阶段\"\n    }}>{`校验等待阶段`}</h4>\n    <p>{`所有节点设置一个定时器 T3，当收到对 `}<em parentName=\"p\">{`proposal`}</em>{` 的校验结果之后，进入预提交阶段`}</p>\n    <h4 {...{\n      \"id\": \"预提交阶段\"\n    }}>{`预提交阶段`}</h4>\n    <p><strong parentName=\"p\">{`Relayer`}</strong>{`: 设置一个定时器 T4，对收到的 `}<em parentName=\"p\">{`precommit`}</em>{` 投票进行聚合并生成位图，将聚合后的投票和位图广播给其他节点`}</p>\n    <p><strong parentName=\"p\">{`Others`}</strong>{`: 设置一个定时器 T4，检查聚合的 `}<em parentName=\"p\">{`precommit`}</em>{` 投票的合法性`}</p>\n    <h4 {...{\n      \"id\": \"提交阶段\"\n    }}>{`提交阶段`}</h4>\n    <p>{`所有节点将 `}<em parentName=\"p\">{`proposal`}</em>{` 提交`}</p>\n    <p>{`共识状态机的状态转换图如下图所示：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/static/docs-img/state_transition.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`在工程中，我们将预投票阶段和校验等待阶段合并为一个阶段，共用一个超时时间。当状态机收到聚合后的投票和校验结果之后，进入到预提交阶段。`}</p>\n    <h4 {...{\n      \"id\": \"状态机状态\"\n    }}>{`状态机状态`}</h4>\n    <p>{`状态机模块需要存储的状态有：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`height`}</em>{`: 当前共识的高度`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`round`}</em>{`: 当前共识的轮次`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`step`}</em>{`: 当前所在的阶段`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`proposal_hash`}</em>{`: 可选，当前正在共识的哈希`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`lock`}</em>{`: 可选，当前是否已经达成 `}<strong parentName=\"p\">{`PoLC`}</strong></p>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"数据结构\"\n    }}>{`数据结构`}</h4>\n    <p>{`状态机的触发结构如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`pub struct SMRTrigger {\n    pub hash: Hash,\n    pub round: Option<u64>,\n    pub trigger_type: TriggerType,\n}\n`}</code></pre>\n    <p>{`状态机的输出结构如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`pub enum SMREvent {\n    /// New round event\n    /// for state: update round,\n    /// for timer: set a propose step timer.\n    NewRoundInfo {\n        round: u64,\n        lock_round: Option<u64>,\n        lock_proposal: Option<Hash>,\n    },\n    /// Prevote event,\n    /// for state: transmit a prevote vote,\n    /// for timer: set a prevote step timer.\n    PrevoteVote(Hash),\n    /// Precommit event,\n    /// for state: transmit a precommit vote,\n    /// for timer: set a precommit step timer.\n    PrecommitVote(Hash),\n    /// Commit event\n    /// for state: do commit,\n    /// for timer: do nothing.\n    Commit(Hash),\n    /// Stop event,\n    /// for state: stop process,\n    /// for timer: stop process.\n    Stop,\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"状态机接口\"\n    }}>{`状态机接口`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`/// Create a new SMR service.\npub fn new() -> Self\n/// Trigger a SMR action.\npub fn trigger(&self, gate: SMRTrigger) -> Result<(), Error>\n/// Goto a new consensus height.\npub fn new_height(&self, height: u64) -> Result<(), Error>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"状态存储state\"\n    }}>{`状态存储(State)`}</h3>\n    <p>{`状态存储模块是整个共识的功能核心，主要的功能为存储状态，消息分发，出块和密码学相关操作。在工作过程中，对于网络层传输来的消息，首先进行验签，校验消息的合法性。对通过的消息判断是否需要写入 Wal。之后将消息发送给状态机。状态存储模块时刻监听状态机抛出的事件，并根据事件作出相应的处理。`}</p>\n    <h4 {...{\n      \"id\": \"存储状态\"\n    }}>{`存储状态`}</h4>\n    <p>{`状态存储模块需要存储的状态有：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`height`}</em>{`: 当前共识的高度`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`round`}</em>{`: 当前共识的轮次`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`proposals`}</em>{`: 缓存当前高度的所有的提议`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`votes`}</em>{`: 缓存当前高度的所有的投票`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`QCs`}</em>{`: 缓存当前高度的所有的 `}<em parentName=\"p\">{`QC`}</em></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`authority_manage`}</em>{`: 共识列表管理`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`is_leader`}</em>{`: 节点是不是 `}<em parentName=\"p\">{`leader`}</em></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`proof`}</em>{`: 可选，上一个 block 的证明`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`last_commit_round`}</em>{`: 可选，上一次提交的轮次`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><em parentName=\"p\">{`last_commit_proposal`}</em>{`: 可选，上一次提交的提议`}</p>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"消息分发\"\n    }}>{`消息分发`}</h4>\n    <p>{`发送消息时，根据消息及参数选择发送消息的方式（广播给其他节点或发送给 `}<em parentName=\"p\">{`Relayer`}</em>{`）。`}</p>\n    <h4 {...{\n      \"id\": \"出块\"\n    }}>{`出块`}</h4>\n    <p>{`当状态存储模块监听到状态机抛出的 `}<inlineCode parentName=\"p\">{`NewRound`}</inlineCode>{` 事件时，通过一个确定性随机数算法判断自己是不是出块节点。如果是出块节点则提出一个 proposal。`}</p>\n    <p><em parentName=\"p\">{`确定性随机数算法`}</em>{`：因为 Overlord 共识协议允许设置不同的出块权重和投票权重，在判断出块时，节点将出块权重进行归一化，并投射到整个 `}<inlineCode parentName=\"p\">{`u64`}</inlineCode>{` 的范围中，使用当前 `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` 与 `}<inlineCode parentName=\"p\">{`round`}</inlineCode>{` 之和作为随机数种子，判断生成的随机数落入到`}<inlineCode parentName=\"p\">{`u64`}</inlineCode>{` 范围中的哪一个区间中，该权重对应的节点即为出块节点。`}</p>\n    <h4 {...{\n      \"id\": \"密码学操作\"\n    }}>{`密码学操作`}</h4>\n    <p>{`密码学操作包括如下方法：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`收到消息时，对消息进行验签`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`收到聚合投票时，验签并校验权重是否超过阈值`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`发出提议或投票时，对消息进行签名`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`自己是 `}<em parentName=\"p\">{`Relayer`}</em>{` 时，对收到的投票进行聚合`}</p>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"状态存储接口\"\n    }}>{`状态存储接口`}</h4>\n    <h3 {...{\n      \"id\": \"定时器\"\n    }}>{`定时器`}</h3>\n    <p>{`当状态机运行到某些状态的时候，需要设定定时器以便超时重发等操作。定时器模块会监听状态机抛出的事件，根据事件设置定时器。当达到超时时间，调用状态机模块的接口触发超时。定时器与状态存储复用 `}<inlineCode parentName=\"p\">{`SMREvent`}</inlineCode>{` 和接口。`}</p>\n    <h3 {...{\n      \"id\": \"wal\"\n    }}>{`Wal`}</h3>\n    <p>{`在共识过程中，需要将一些消息写入到 Wal 中。当重启时，状态存储模块首先从 Wal 中读取消息，回复重启前的状态。Wal 模块只与状态存储模块交互。`}</p>\n    <h4 {...{\n      \"id\": \"wal-接口\"\n    }}>{`Wal 接口`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`/// Save wal information.\npub async fn save(&self, info: Bytes) -> Result<(), Error>;\n/// Load wal information.\npub fn load(&self) -> Result<Option<Bytes>, Error>;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"overlord-接口\"\n    }}>{`Overlord 接口`}</h2>\n    <h3 {...{\n      \"id\": \"共识接口\"\n    }}>{`共识接口`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`#[async_trait]\npub trait Consensus<T: Codec>: Send + Sync {\n    /// Get a block of an height and return the block with its hash.\n    async fn get_block(\n        &self,\n        _ctx: Vec<u8>,\n        height: u64,\n    ) -> Result<(T, Hash), Box<dyn Error + Send>>;\n\n    /// Check the correctness of a block. If is passed, return the integrated transcations to do\n    /// data persistence.\n    async fn check_block(\n        &self,\n        _ctx: Vec<u8>,\n        height: u64,\n        hash: Hash,\n    ) -> Result<(), Box<dyn Error + Send>>;\n\n    /// Commit a given block to execute and return the rich status.\n    async fn commit(\n        &self,\n        _ctx: Vec<u8>,\n        height: u64,\n        commit: Commit<T>,\n    ) -> Result<Status, Box<dyn Error + Send>>;\n\n    /// Get an authority list of the given height.\n    async fn get_authority_list(\n        &self, \n        _ctx: Vec<u8>, \n        height: u64\n    ) -> Result<Vec<Node>, Box<dyn Error + Send>>;\n\n    /// Broadcast a message to other replicas.\n    async fn broadcast_to_other(\n        &self,\n        _ctx: Vec<u8>,\n        msg: OutputMsg<T>,\n    ) -> Result<(), Box<dyn Error + Send>>;\n\n    /// Transmit a message to the Relayer, the third argument is the relayer's address.\n    async fn transmit_to_relayer(\n        &self,\n        _ctx: Vec<u8>,\n        addr: Address,\n        msg: OutputMsg<T>,\n    ) -> Result<(), Box<dyn Error + Send>>;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"密码学接口\"\n    }}>{`密码学接口`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`pub trait Crypto {\n    /// Hash a message.\n    fn hash(&self, msg: &[u8]) -> Hash;\n\n    /// Sign to the given hash by private key.\n    fn sign(&self, hash: Hash) -> Result<Signature, Box<dyn Error + Send>>;\n\n    /// Aggregate signatures into an aggregated signature.\n    fn aggregate_signatures(\n        &self,\n        signatures: Vec<Signature>,\n    ) -> Result<Signature, Box<dyn Error + Send>>;\n\n    /// Verify a signature.\n    fn verify_signature(\n        &self,\n        signature: Signature,\n        hash: Hash,\n    ) -> Result<Address, Box<dyn Error + Send>>;\n    \n    /// Verify an aggregated signature.\n    fn verify_aggregated_signature(\n        &self,\n        aggregate_signature: AggregatedSignature,\n    ) -> Result<(), Box<dyn Error + Send>>;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}